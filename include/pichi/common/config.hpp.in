#ifndef PICHI_CONFIG_H
#define PICHI_CONFIG_H

#cmakedefine HAS_CLASS_TEMPLATE_ARGUMENT_DEDUCTION

#cmakedefine HAS_UNISTD_H
#cmakedefine HAS_SIGNAL_H
#cmakedefine HAS_PWD_H
#cmakedefine HAS_GRP_H
#cmakedefine HAS_GETPWNAM
#cmakedefine HAS_SETUID
#cmakedefine HAS_GETGRNAM
#cmakedefine HAS_SETGID
#cmakedefine HAS_FORK
#cmakedefine HAS_SETSID
#cmakedefine HAS_CLOSE

#cmakedefine NO_IGNORED_ATTRIBUTES_FOR_SODIUM
#cmakedefine DEPRECATED_RFC2818_CLASS

#cmakedefine DISABLE_SHORTEN_64_TO_32_WARNING
#if defined(DISABLE_SHORTEN_64_TO_32_WARNING) && defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wshorten-64-to-32"
#include <boost/asio/basic_socket.hpp>
#include <boost/asio/ssl/impl/context.ipp>
#include <boost/beast/zlib/detail/deflate_stream.ipp>
#pragma clang diagnostic pop
#endif  // DISABLE_SHORTEN_64_TO_32_WARNING && __clang__

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable : 4702)
#include <boost/beast/http/fields.hpp>
#pragma warning(pop)
#endif  // _MSC_VER

#if defined(__GNUC__) && __GNUC__ >= 8
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wclass-memaccess"
#include <rapidjson/document.h>
#pragma GCC diagnostic pop
#endif

#cmakedefine HAS_SP_COUNTED_BASE_CLANG_HPP
#if defined(HAS_SP_COUNTED_BASE_CLANG_HPP) && defined(__clang__)
#if !__has_feature(c_atomic)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wc11-extensions"
#include <boost/smart_ptr/detail/sp_counted_base_clang.hpp>
#pragma clang diagnostic pop
#endif  // !__has_feature(c_atomic)
#endif  // HAS_SP_COUNTED_BASE_CLANG_HPP && __clang__

#cmakedefine DEPRECATED_ALLOCATOR_VOID
#if defined(DEPRECATED_ALLOCATOR_VOID) && defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#include <boost/asio/associated_allocator.hpp>
#include <boost/asio/impl/compose.hpp>
#include <boost/asio/impl/executor.hpp>
#include <boost/asio/io_context.hpp>
#include <boost/asio/strand.hpp>
#include <boost/beast/core/async_base.hpp>
#pragma clang diagnostic pop
#endif  // DEPRECATED_ALLOCATOR_VOID && __clang__

#cmakedefine CMAKE_INSTALL_PREFIX "@CMAKE_INSTALL_PREFIX@"

#ifdef CMAKE_INSTALL_PREFIX
#define PICHI_PREFIX CMAKE_INSTALL_PREFIX
#else  // CMAKE_INSTALL_PREFIX
#error "CMAKE_INSTALL_PREFIX not defined"
#endif  // CMAKE_INSTALL_PREFIX

#cmakedefine BUILD_TEST

#endif  // PICHI_CONFIG_H
