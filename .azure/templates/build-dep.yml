parameters:
  name: ''
  url: ''
  dir: ''
  ws: ''

steps:
  - bash: >
      curl -LSsf "${{ parameters.url }}" | tar zxf - -C ${{ parameters.ws }}
    displayName: "Download and extract ${{ parameters.name }}"
  - ${{ if eq(parameters.name, 'rapidjson') }}:
    - bash: |
        cp -r ${{ parameters.ws }}/${{ parameters.dir }}/include/${{ parameters.name }} \
          $(SYSROOT)/include
      displayName: "Prepare ${{ parameters.name }} header files"
  - ${{ if eq(parameters.name, 'boost') }}:
    - bash: |
        bash $(Build.SourcesDirectory)/deps-build/boost.sh \
          ${{ parameters.ws }}/${{ parameters.dir }}
      displayName: "Build and install ${{ parameters.name }}"
  - ${{ if or(eq(parameters.name, 'libmaxminddb'), eq(parameters.name, 'libsodium')) }}:
    - bash: |
        cp -f $(Build.SourcesDirectory)/deps-build/${{ parameters.name }}.cmake \
          ${{ parameters.ws }}/${{ parameters.dir }}/CMakeLists.txt
      displayName: "Setup cmake arguments for ${{ parameters.name }}"
    - template: ./cmake.yml
      parameters:
        name: ${{ parameters.name }}
        buildTarget: install
        arguments: $(TOOLCHAIN_ARGS) -D BUILD_SHARED=OFF
        cwd: ${{ parameters.ws }}/${{ parameters.dir }}/build
        src: ${{ parameters.ws }}/${{ parameters.dir }}
  - ${{ if eq(parameters.name, 'mbedtls') }}:
    - template: ./cmake.yml
      parameters:
        name: ${{ parameters.name }}
        buildTarget: install
        arguments: $(TOOLCHAIN_ARGS) -D ENABLE_PROGRAMS=OFF -D ENABLE_TESTING=OFF
        cwd: ${{ parameters.ws }}/${{ parameters.dir }}/build
        src: ${{ parameters.ws }}/${{ parameters.dir }}
