parameters:
  buildTarget: "all"
  testTarget: "test"
  extraArgs: ''

steps:
  - bash: >
      echo "##vso[task.setvariable variable=PARALLEL]$(sysctl -n hw.physicalcpu)"
    displayName: "Get the number of cores"
    condition: eq(variables['Agent.OS'], 'Darwin')
  - bash: >
      echo "##vso[task.setvariable variable=PARALLEL]$(nproc)"
    displayName: "Get the number of cores"
    condition: eq(variables['Agent.OS'], 'Linux')
  - powershell: >
      $cs = Get-WmiObject -class Win32_ComputerSystem;
      $Cores = $cs.numberoflogicalprocessors;
      echo "##vso[task.setvariable variable=PARALLEL]$Cores"
    displayName: "Get the number of cores"
    condition: eq(variables['Agent.OS'], 'Windows_NT')
  - powershell: >
      $env:PATH += ";$(VCPKG_INSTALLATION_ROOT)\installed\$(PLATFORM)\bin";
      $env:PATH += ";$(Build.BinariesDirectory)\src\$(CMAKE_CONFIG)";
      echo "##vso[task.setvariable variable=PATH]$env:PATH"
    displayName: "Setup PATH"
    condition: and(eq(variables['Agent.OS'], 'Windows_NT'), eq(variables['STATIC_LINK'], 'OFF'))
  - task: CMake@1
    displayName: "Generate building files"
    inputs:
      cmakeArgs: >
        -G "$(GENERATOR)"
        -DCMAKE_BUILD_TYPE=$(CMAKE_CONFIG)
        -DSTATIC_LINK=$(STATIC_LINK)
        -DENABLE_TLS=ON
        ${{ parameters.extraArgs }}
        $(Build.SourcesDirectory)
      cwd: $(Build.BinariesDirectory)
  - task: CMake@1
    displayName: "Build all"
    inputs:
      cmakeArgs: >
        --build $(Build.BinariesDirectory)
        -j $(PARALLEL)
        --target ${{ parameters.buildTarget }}
        --config $(CMAKE_CONFIG)
  - task: CMake@1
    displayName: "Run unit tests"
    inputs:
      cmakeArgs: >
        --build $(Build.BinariesDirectory)
        --target ${{ parameters.testTarget }}
        --config $(CMAKE_CONFIG)
