parameters:
  name: ''
  displayName: ''
  vmImage: ''

jobs:
  - job: ${{ parameters.name }}
    displayName: ${{ parameters.displayName }}
    pool:
      vmImage: ${{ parameters.vmImage }}
    variables:
      - name: VM_IMAGE
        value: ${{ parameters.vmImage }}
    strategy:
      matrix:
        static_debug:
          STATIC_LINK: "ON"
          CMAKE_CONFIG: "Debug"
        static_release:
          STATIC_LINK: "ON"
          CMAKE_CONFIG: "MinSizeRel"
        dynamic_debug:
          STATIC_LINK: "OFF"
          CMAKE_CONFIG: "Debug"
        dynamic_release:
          STATIC_LINK: "OFF"
          CMAKE_CONFIG: "MinSizeRel"
    steps:
      - powershell: |
          if ($env:STATIC_LINK -eq "ON") {
            echo "##vso[task.setvariable variable=PLATFORM]x64-windows-static"
          } else {
            echo "##vso[task.setvariable variable=PLATFORM]x64-windows"
          }
        displayName: "Setup PLATFORM"
      - powershell: >
          $env:PATH += ";$env:VCPKG_INSTALLATION_ROOT\installed\$env:PLATFORM\bin";
          $env:PATH += ";$(Build.BinariesDirectory)\src\$env:CMAKE_CONFIG";
          echo "##vso[task.setvariable variable=PATH]$env:PATH"
        displayName: "Setup PATH"
      - powershell: >
          if ($env:VM_IMAGE -eq "vs2017-win2016") {
            echo "##vso[task.setvariable variable=GENERATOR]Visual Studio 15 2017 Win64"
          } else {
            echo "##vso[task.setvariable variable=GENERATOR]Visual Studio 16 2019"
          }
        displayName: "Setup GENERATOR"
      - task: Cache@2
        inputs:
          key: 'vcpkg | $(PLATFORM)'
          path: $(VCPKG_INSTALLATION_ROOT)/installed
        displayName: "Cache VCPKG packages"
      - powershell: >
          (git -C "$env:VCPKG_INSTALLATION_ROOT" pull origin master) -Or ($True);
          bootstrap-vcpkg.bat;
          (vcpkg install boost-system:"$env:PLATFORM") -Or ($True);
          vcpkg install boost-asio:"$env:PLATFORM" boost-beast:"$env:PLATFORM" `
            boost-coroutine2:"$env:PLATFORM" boost-filesystem:"$env:PLATFORM" `
            boost-mpl:"$env:PLATFORM" boost-program-options:"$env:PLATFORM" `
            boost-test:"$env:PLATFORM" libmaxminddb:"$env:PLATFORM" `
            libsodium:"$env:PLATFORM" mbedtls:"$env:PLATFORM" rapidjson:"$env:PLATFORM"
        displayName: "Prepare VCPKG packages"
      - task: CMake@1
        displayName: "Generate building files"
        inputs:
          cmakeArgs: >
            -DCMAKE_TOOLCHAIN_FILE="$(VCPKG_INSTALLATION_ROOT)/scripts/buildsystems/vcpkg.cmake"
            -DVCPKG_TARGET_TRIPLET="$(PLATFORM)"
            -DCMAKE_BUILD_TYPE="$(CMAKE_CONFIG)"
            -DSTATIC_LINK="$(STATIC_LINK)"
            -G "$(GENERATOR)"
            $(Build.SourcesDirectory)
          workingDirectory: $(Build.BinariesDirectory)
      - task: CMake@1
        displayName: "Build all"
        inputs:
          cmakeArgs: >
            --build $(Build.BinariesDirectory)
            --config $(CMAKE_CONFIG)
            --target ALL_BUILD
      - task: CMake@1
        displayName: "Run unit tests"
        inputs:
          cmakeArgs: >
            --build $(Build.BinariesDirectory)
            --config $(CMAKE_CONFIG)
            --target RUN_TESTS
